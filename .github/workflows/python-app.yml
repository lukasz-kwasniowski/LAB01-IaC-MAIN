name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./example-app

    strategy:
      matrix:
        task: [dependencies, static_tests, unit_tests]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Install Poetry Action
      uses: snok/install-poetry@v1

    - name: Task Dispatch
      run: echo "::set-output name=task::${{ matrix.task }}"

    - name: Install dependencies
      run: |
        if [[ "${{ matrix.task }}" == "dependencies" ]]; then
          poetry install --no-root
        fi

    - name: Lint
      run: |
        if [[ "${{ matrix.task }}" == "static_tests" ]]; then
          poetry run task lint
        fi

    - name: Formatter
      run: |
        if [[ "${{ matrix.task }}" == "static_tests" ]]; then
          poetry run task formatter
        fi

    - name: Security
      run: |
        if [[ "${{ matrix.task }}" == "static_tests" ]]; then
          poetry run task security
        fi

    - name: Unit Tests
      run: |
        if [[ "${{ matrix.task }}" == "unit_tests" ]]; then
          # Add your unit test command here
          echo "Running unit tests..."
        fi
